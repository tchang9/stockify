{"ast":null,"code":"import _defineProperty from \"/Users/tchang/Development/stockify/frontend_stockify/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/tchang/Development/stockify/frontend_stockify/src/components/Portfolio.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport v4 from 'uuid';\nimport Nav from './Nav';\n\nclass Portfolio extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      balance: null,\n      userStocks: {},\n      buy: {\n        ticker: \"\",\n        quantity: 0\n      },\n      message: \"\"\n    };\n\n    this.renderStocks = () => {\n      return Object.keys(this.state.userStocks).map(ticker => {\n        const quantity = this.state.userStocks[ticker].quantity;\n        const price = parseFloat(this.state.userStocks[ticker].price).toFixed(2);\n        const openPrice = parseFloat(this.state.userStocks[ticker].open_price).toFixed(2);\n        let color = \"gray\";\n\n        if (price < openPrice) {\n          color = \"red\";\n        } else if (price > openPrice) {\n          color = \"green\";\n        }\n\n        return React.createElement(\"div\", {\n          key: v4(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"font\", {\n          color: color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, ticker), \" - \", quantity, \" Shares          \", (price * quantity).toFixed(2));\n      });\n    };\n\n    this.renderTotalStocks = () => {\n      let total = 0;\n\n      for (const ticker in this.state.userStocks) {\n        total += this.state.userStocks[ticker].quantity * parseFloat(this.state.userStocks[ticker].price).toFixed(2);\n      }\n\n      return total.toFixed(2);\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        buy: _objectSpread({}, this.state.buy, {\n          [e.target.name]: e.target.value\n        })\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        message: \"\"\n      });\n      fetch(\"http://localhost:3000/buy\", {\n        method: \"POST\",\n        body: JSON.stringify(this.state.buy),\n        headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\": localStorage.getItem(\"token\")\n        }\n      }).then(res => res.json()).then(res => {\n        if (res.message) {\n          this.setState({\n            message: res.message\n          });\n        } else {\n          console.log(res);\n          let newStockTotal = res.quantity;\n\n          if (this.state.userStocks[res.stock_ticker]) {\n            newStockTotal += this.state.userStocks[res.stock_ticker].quantity;\n          }\n\n          this.setState({\n            userStocks: _objectSpread({}, this.state.userStocks, {\n              [res.stock_ticker]: _objectSpread({}, this.state.userStocks[res.stock_ticker], {\n                quantity: newStockTotal,\n                price: res.price,\n                open_price: res.stock.open_price\n              })\n            }),\n            balance: res.user.balance\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    const userId = localStorage.getItem(\"token\");\n    fetch(\"http://localhost:3000/userstocks\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        id: userId\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(res => {\n      if (res.message) {\n        this.setState({\n          message: res.message\n        });\n      } else {\n        this.setState({\n          userStocks: _objectSpread({}, res.transactions),\n          balance: res.balance\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), this.state.message ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.state.message) : null, this.state.balance === null && this.state.message === \"\" ? \"Fetching Data..\" : React.createElement(\"div\", {\n      className: \"portfolio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Portfolio (\", this.renderTotalStocks(), \")\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.renderStocks())), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Balance - \", this.state.balance), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Stock Ticker\", React.createElement(\"input\", {\n      name: \"ticker\",\n      type: \"text\",\n      value: this.state.buy.ticker,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), \"Quantity:\", React.createElement(\"input\", {\n      name: \"quantity\",\n      type: \"number\",\n      min: \"1\",\n      value: this.state.buy.quantity,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Buy Stocks\")))));\n  }\n\n}\n\nexport default Portfolio;","map":{"version":3,"sources":["/Users/tchang/Development/stockify/frontend_stockify/src/components/Portfolio.js"],"names":["React","v4","Nav","Portfolio","Component","state","balance","userStocks","buy","ticker","quantity","message","renderStocks","Object","keys","map","price","parseFloat","toFixed","openPrice","open_price","color","renderTotalStocks","total","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","fetch","method","body","JSON","stringify","headers","localStorage","getItem","then","res","json","console","log","newStockTotal","stock_ticker","stock","user","componentDidMount","userId","id","transactions","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport v4 from 'uuid'\nimport Nav from './Nav'\n\nclass Portfolio extends React.Component {\n\n    state = {\n        balance: null,\n        userStocks: {},\n        buy: {\n            ticker: \"\",\n            quantity: 0\n        },\n        message: \"\"\n    }\n\n    componentDidMount() {\n        const userId = localStorage.getItem(\"token\")\n        fetch(`http://localhost:3000/userstocks`, {\n            method: \"POST\", \n            body: JSON.stringify({id:userId}),\n            headers:{\n                'Content-Type': 'application/json'\n            }\n        })\n        .then( res => res.json())\n        .then( res => {\n            if (res.message) {\n                this.setState({\n                    message: res.message\n                })\n            } else {\n                this.setState({\n                    userStocks: {...res.transactions},\n                    balance: res.balance\n                })\n            }\n        })\n    }\n\n    renderStocks = () => {\n        return Object.keys(this.state.userStocks).map(ticker => {\n            const quantity = this.state.userStocks[ticker].quantity\n            const price = parseFloat(this.state.userStocks[ticker].price).toFixed(2)\n            const openPrice = parseFloat(this.state.userStocks[ticker].open_price).toFixed(2)\n            let color = \"gray\"\n                if (price < openPrice) {\n                    color = \"red\"\n                } else if (price > openPrice) {\n                    color = \"green\"\n                }\n\n            return (\n\n                <div key={ v4() }><font color={color}>{ticker}</font> - {quantity} Shares          {(price * quantity).toFixed(2)}</div>\n            )\n        })\n    }\n\n    renderTotalStocks = () => {\n        let total = 0\n        for (const ticker in this.state.userStocks) {\n            total += this.state.userStocks[ticker].quantity * parseFloat(this.state.userStocks[ticker].price).toFixed(2)\n        }\n        return total.toFixed(2)\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            buy: {...this.state.buy, [e.target.name]: e.target.value}\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.setState({\n            message:\"\"\n        })\n        fetch(`http://localhost:3000/buy`, {\n            method: \"POST\", \n            body: JSON.stringify(this.state.buy),\n            headers:{\n                'Content-Type': 'application/json',\n                \"Authorization\": localStorage.getItem(\"token\")\n            }\n        })\n        .then( res => res.json())\n        .then( res => {\n            if (res.message) {\n                this.setState({\n                    message: res.message\n                })\n            } else {\n                console.log(res)\n                let newStockTotal = res.quantity\n                if (this.state.userStocks[res.stock_ticker]) {\n                    newStockTotal += this.state.userStocks[res.stock_ticker].quantity\n                }\n                this.setState({\n                    userStocks: {...this.state.userStocks,\n                        [res.stock_ticker]: {\n                            ...this.state.userStocks[res.stock_ticker],\n                                quantity: newStockTotal,\n                                price: res.price,\n                                open_price: res.stock.open_price\n                        }\n                    },\n                    balance: res.user.balance\n                })\n            }\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <Nav />\n                {this.state.message\n                ?\n                <div>{this.state.message}</div>\n                :\n                null\n                }\n                {this.state.balance === null && this.state.message === \"\" ? \"Fetching Data..\" :\n                    <div className=\"portfolio\">\n                        <div>   \n                            <h1>Portfolio ({this.renderTotalStocks()})</h1>\n                            <div>{this.renderStocks()}</div>\n                        </div>\n                        <div>\n                            <h2>Balance - {this.state.balance}</h2>\n                            <form>\n                                Stock Ticker\n                                <input\n                                    name=\"ticker\" \n                                    type=\"text\" \n                                    value={this.state.buy.ticker}\n                                    onChange={this.handleChange}/>\n                                Quantity:\n                                <input\n                                    name=\"quantity\"\n                                    type=\"number\" \n                                    min=\"1\"\n                                    value={this.state.buy.quantity}\n                                    onChange={this.handleChange}/>\n                                <button type=\"submit\" onClick={this.handleSubmit}>Buy Stocks</button>\n                            </form>\n                        </div>\n                    </div>\n                }\n            </>\n        )\n    }\n}\n\nexport default Portfolio"]},"metadata":{},"sourceType":"module"}