{"ast":null,"code":"import _defineProperty from \"/Users/tchang/Development/stockify/frontend_stockify/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/tchang/Development/stockify/frontend_stockify/src/components/Portfolio.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport v4 from 'uuid';\n\nclass Portfolio extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userStocks: {},\n      buy: {\n        ticker: \"\",\n        quantity: 0\n      }\n    };\n\n    this.renderStocks = () => {\n      return Object.keys(this.state.userStocks).map(ticker => {\n        return React.createElement(\"div\", {\n          key: v4(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, ticker, \" - \", this.state.userStocks[ticker].quantity);\n      });\n    };\n\n    this.renderTotalStocks = () => {\n      let total = 0;\n\n      for (const ticker in this.state.userStocks) {\n        total += this.state.userStocks[ticker].quantity * this.state.userStocks[ticker].price;\n      }\n\n      return total;\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        buy: _objectSpread({}, this.state.buy, {\n          [e.target.name]: e.target.value\n        })\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      fetch(\"http://localhost:3000/buy\", {\n        method: \"POST\",\n        body: JSON.stringify(this.state.buy),\n        headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\": localStorage.getItem(\"token\")\n        }\n      }).then(res => res.json()).then(res => {\n        if (res.message) {\n          console.log(res.message);\n        } else {\n          const newStockTotal = this.state.userStocks[res.stock_ticker].quantity + res.quantity;\n          this.setState({\n            userStocks: _objectSpread({}, this.state.userStocks, {\n              [res.stock_ticker]: _objectSpread({}, this.state.userStocks[res.stock_ticker], {\n                quantity: newStockTotal\n              })\n            })\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    const userId = localStorage.getItem(\"token\");\n    fetch(\"http://localhost:3000/userstocks\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        id: userId\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(res => {\n      console.log(res);\n      this.setState({\n        userStocks: _objectSpread({}, res)\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Portfolio \", this.renderTotalStocks()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.renderStocks()), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Stock Ticker\", React.createElement(\"input\", {\n      name: \"ticker\",\n      type: \"text\",\n      value: this.state.buy.ticker,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), \"Quantity:\", React.createElement(\"input\", {\n      name: \"quantity\",\n      type: \"number\",\n      min: \"1\",\n      value: this.state.buy.quantity,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Buy Stocks\")));\n  }\n\n}\n\nexport default Portfolio;","map":{"version":3,"sources":["/Users/tchang/Development/stockify/frontend_stockify/src/components/Portfolio.js"],"names":["React","v4","Portfolio","Component","state","userStocks","buy","ticker","quantity","renderStocks","Object","keys","map","renderTotalStocks","total","price","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","fetch","method","body","JSON","stringify","headers","localStorage","getItem","then","res","json","message","console","log","newStockTotal","stock_ticker","componentDidMount","userId","id","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport v4 from 'uuid'\n\nclass Portfolio extends React.Component {\n\n    state = {\n        userStocks: {},\n        buy: {\n            ticker: \"\",\n            quantity: 0\n        }\n    }\n\n    componentDidMount() {\n        const userId = localStorage.getItem(\"token\")\n        fetch(`http://localhost:3000/userstocks`, {\n            method: \"POST\", \n            body: JSON.stringify({id:userId}),\n            headers:{\n                'Content-Type': 'application/json'\n            }\n        })\n        .then( res => res.json())\n        .then( res => {\n            console.log(res)\n            this.setState({\n                userStocks: {...res}\n            })\n        })\n    }\n\n    renderStocks = () => {\n        return Object.keys(this.state.userStocks).map(ticker => {\n            return (\n                <div key={ v4() }>{ticker} - {this.state.userStocks[ticker].quantity}</div>\n            )\n        })\n    }\n\n    renderTotalStocks = () => {\n        let total = 0\n        for (const ticker in this.state.userStocks) {\n            total += this.state.userStocks[ticker].quantity * this.state.userStocks[ticker].price\n        }\n        return total\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            buy: {...this.state.buy, [e.target.name]: e.target.value}\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        fetch(`http://localhost:3000/buy`, {\n            method: \"POST\", \n            body: JSON.stringify(this.state.buy),\n            headers:{\n                'Content-Type': 'application/json',\n                \"Authorization\": localStorage.getItem(\"token\")\n            }\n        })\n        .then( res => res.json())\n        .then( res => {\n            if (res.message) {\n                console.log(res.message)\n            } else {\n                const newStockTotal = this.state.userStocks[res.stock_ticker].quantity + res.quantity\n                this.setState({\n                    userStocks: {...this.state.userStocks,\n                        [res.stock_ticker]: {\n                            ...this.state.userStocks[res.stock_ticker],\n                                quantity: newStockTotal\n                        }\n                    }\n                })\n            }\n        })\n    }\n\n    render() {\n        console.log(this.state)\n        return (\n            <>\n                <h1>Portfolio {this.renderTotalStocks()}</h1>\n                <div>{this.renderStocks()}</div>\n                <form>\n                    Stock Ticker\n                    <input\n                        name=\"ticker\" \n                        type=\"text\" \n                        value={this.state.buy.ticker}\n                        onChange={this.handleChange}/>\n                    Quantity:\n                    <input\n                        name=\"quantity\"\n                        type=\"number\" \n                        min=\"1\"\n                        value={this.state.buy.quantity}\n                        onChange={this.handleChange}/>\n                    <button type=\"submit\" onClick={this.handleSubmit}>Buy Stocks</button>\n                </form>\n            </>\n        )\n    }\n}\n\nexport default Portfolio"]},"metadata":{},"sourceType":"module"}